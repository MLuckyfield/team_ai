user www-data;
worker_processes auto;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Logging settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Gzip Settings
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Health check upstream
    upstream health_backend {
        server 127.0.0.1:8081;
        server 127.0.0.1:5678 backup;
        server 127.0.0.1:8080 backup;
        server 127.0.0.1:3000 backup;
    }
    
    server {
        listen 80 default_server;
        server_name _;
        client_max_body_size 50M;
        
        # Health check endpoint - high priority
        location = /health {
            access_log off;
            add_header Content-Type text/plain;
            
            # Check OpenSign server health
            proxy_pass http://localhost:8080/app/health;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Fallback if OpenSign server is not ready
            error_page 404 500 502 503 504 = @health_fallback;
        }
        
        location @health_fallback {
            access_log off;
            add_header Content-Type text/plain;
            return 200 'OK';
        }
        
        # Landing page - serve from root (moved to port 8081)
        location / {
            proxy_pass http://localhost:8081;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
        }
        
        # n8n service - preserve the /n8n path
        location /n8n/ {
            proxy_pass http://localhost:5678/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            chunked_transfer_encoding off;
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
        }
        
        # OpenSign API - backend server (Parse Server)
        location /opensign-api/ {
            proxy_pass http://localhost:8080/app/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
        }
        
        # OpenSign client - frontend React app
        location /opensign/ {
            proxy_pass http://localhost:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            
            # Handle React Router (SPA routing)
            try_files $uri $uri/ /index.html;
        }
        
        # Error pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
} 