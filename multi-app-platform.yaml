name: multi-app-platform
services:
  # OpenSign Service
  - name: opensign
    source_dir: /opensign
    github:
      repo: MLuckyfield/team_ai
      branch: main
    build_command: |
      cd apps/OpenSign
      npm install
      npm run build
    run_command: serve -s build -l 8080
    environment_slug: node-js
    instance_count: 1
    instance_size_slug: basic-s
    routes:
      - path: /opensign
    envs:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        value: ${opensign-db.DATABASE_URL}
      - key: AWS_ACCESS_KEY_ID
        value: ${AWS_ACCESS_KEY_ID}
      - key: AWS_SECRET_ACCESS_KEY
        value: ${AWS_SECRET_ACCESS_KEY}
      - key: AWS_S3_BUCKET
        value: ${AWS_S3_BUCKET}
      - key: PUBLIC_URL
        value: https://${APP_DOMAIN}/opensign

  # n8n Service
  - name: n8n
    image:
      registry_type: DOCKER_HUB
      registry: docker.n8n.io/n8nio/n8n
      tag: latest
    instance_count: 1
    instance_size_slug: basic-s
    routes:
      - path: /n8n
    envs:
      - key: N8N_HOST
        value: 0.0.0.0
      - key: N8N_PORT
        value: "8080"
      - key: N8N_PROTOCOL
        value: https
      - key: WEBHOOK_URL
        value: https://${APP_DOMAIN}/n8n/
      - key: N8N_PATH
        value: /n8n
      - key: DB_TYPE
        value: postgresdb
      - key: DB_POSTGRESDB_DATABASE
        value: n8n
      - key: DB_POSTGRESDB_HOST
        value: ${shared-db.HOSTNAME}
      - key: DB_POSTGRESDB_PORT
        value: ${shared-db.PORT}
      - key: DB_POSTGRESDB_USER
        value: ${shared-db.USERNAME}
      - key: DB_POSTGRESDB_PASSWORD
        value: ${shared-db.PASSWORD}
      - key: VUE_APP_URL_BASE_API
        value: https://${APP_DOMAIN}/n8n/

  # Crawl4AI Service
  - name: crawl4ai
    image:
      registry_type: DOCKER_HUB
      registry: unclecode/crawl4ai
      tag: latest
    instance_count: 1
    instance_size_slug: basic-s
    routes:
      - path: /crawl4ai
    envs:
      - key: REDIS_URL
        value: ${shared-redis.REDIS_URL}
      - key: OPENAI_API_KEY
        value: ${OPENAI_API_KEY}
      - key: ANTHROPIC_API_KEY
        value: ${ANTHROPIC_API_KEY}
      - key: LOG_LEVEL
        value: INFO

  # Static Site for Root Path (Optional - Landing Page)
  - name: landing
    source_dir: /
    github:
      repo: MLuckyfield/team_ai
      branch: main
    build_command: |
      mkdir -p build
      cat > build/index.html << 'EOF'
      <!DOCTYPE html>
      <html>
      <head>
          <title>Multi-App Platform</title>
          <style>
              body { font-family: Arial, sans-serif; margin: 40px; }
              .app-card { border: 1px solid #ddd; padding: 20px; margin: 20px 0; border-radius: 8px; }
              .app-card h2 { color: #333; }
              .app-card a { color: #0070f3; text-decoration: none; }
              .app-card a:hover { text-decoration: underline; }
          </style>
      </head>
      <body>
          <h1>Multi-Application Platform</h1>
          <div class="app-card">
              <h2>OpenSign</h2>
              <p>E-signature platform for document signing</p>
              <a href="/opensign">Access OpenSign →</a>
          </div>
          <div class="app-card">
              <h2>n8n</h2>
              <p>Workflow automation platform</p>
              <a href="/n8n">Access n8n →</a>
          </div>
          <div class="app-card">
              <h2>Crawl4AI</h2>
              <p>AI-powered web crawler service</p>
              <a href="/crawl4ai">Access Crawl4AI →</a>
          </div>
      </body>
      </html>
      EOF
    run_command: serve -s build -l 8080
    environment_slug: node-js
    instance_count: 1
    instance_size_slug: basic-xxs
    routes:
      - path: /

# Shared Databases
databases:
  - name: opensign-db
    engine: PG
    size: basic-xs
    num_nodes: 1

  - name: shared-db
    engine: PG
    size: basic-xs
    num_nodes: 1

  - name: shared-redis
    engine: REDIS
    size: basic-xs
    num_nodes: 1

# Environment Variables (to be set in App Platform dashboard)
envs:
  - key: AWS_ACCESS_KEY_ID
    scope: RUN_AND_BUILD_TIME
  - key: AWS_SECRET_ACCESS_KEY
    scope: RUN_AND_BUILD_TIME
  - key: AWS_S3_BUCKET
    scope: RUN_AND_BUILD_TIME
  - key: OPENAI_API_KEY
    scope: RUN_TIME
  - key: ANTHROPIC_API_KEY
    scope: RUN_TIME 