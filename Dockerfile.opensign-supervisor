FROM node:20-slim

# Install system dependencies including MongoDB
RUN apt-get update && apt-get install -y \
    curl \
    supervisor \
    nginx \
    python3 \
    python3-pip \
    build-essential \
    git \
    gnupg \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Install MongoDB (following official MongoDB installation)
RUN wget -qO - https://www.mongodb.org/static/pgp/server-7.0.asc | apt-key add - && \
    echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/debian bookworm/mongodb-org/7.0 main" | tee /etc/apt/sources.list.d/mongodb-org-7.0.list && \
    apt-get update && \
    apt-get install -y mongodb-org && \
    rm -rf /var/lib/apt/lists/*

# Create necessary directories and set permissions
RUN mkdir -p /var/log/supervisor /var/run/supervisor /var/lib/mongodb /var/log/mongodb \
    && chmod 755 /var/log/supervisor /var/run/supervisor /var/lib/mongodb /var/log/mongodb \
    && chown mongodb:mongodb /var/lib/mongodb /var/log/mongodb

WORKDIR /app

# Copy existing working files for landing page
COPY server.js ./
COPY package.json ./
COPY index.html ./

# Install n8n globally (keep our proven approach)
RUN npm config set registry https://registry.npmjs.org/ && \
    npm install -g n8n@1.70.1 --timeout=300000

# Install landing page dependencies
RUN npm install

# Clone OpenSign repository (official source)
RUN git clone https://github.com/OpenSignLabs/OpenSign.git /opensign && \
    cd /opensign && \
    git checkout main

# Install OpenSign Server dependencies
WORKDIR /opensign/apps/OpenSignServer
RUN npm install --production

# Install OpenSign Client dependencies and build
WORKDIR /opensign/apps/OpenSign
RUN npm install
RUN npm run build

# Back to main directory
WORKDIR /app

# Create OpenSign environment configuration
RUN echo 'appName=OpenSign' > /opensign/.env.prod && \
    echo 'MASTER_KEY=XnAadwKxxByMr' >> /opensign/.env.prod && \
    echo 'MONGODB_URI=mongodb://localhost:27017/OpenSignDB' >> /opensign/.env.prod && \
    echo 'PARSE_MOUNT=/app' >> /opensign/.env.prod && \
    echo 'SERVER_URL=http://localhost:8080/app' >> /opensign/.env.prod && \
    echo 'PUBLIC_URL=https://unified-minimal-platform-5p64u.ondigitalocean.app/opensign' >> /opensign/.env.prod && \
    echo 'USE_LOCAL=true' >> /opensign/.env.prod && \
    echo 'SMTP_ENABLE=false' >> /opensign/.env.prod && \
    echo 'PFX_BASE64=' >> /opensign/.env.prod && \
    echo 'PASS_PHRASE=opensign' >> /opensign/.env.prod && \
    echo 'APP_ID=opensign' >> /opensign/.env.prod && \
    echo 'REACT_APP_SERVERURL=https://unified-minimal-platform-5p64u.ondigitalocean.app/opensign-api' >> /opensign/.env.prod && \
    echo 'REACT_APP_APPID=opensign' >> /opensign/.env.prod

# Copy configuration files
COPY nginx.opensign-supervisor.conf /etc/nginx/nginx.conf
COPY supervisord.opensign-supervisor.conf /etc/supervisor/conf.d/supervisord.conf

# Create nginx directories and fix permissions
RUN mkdir -p /var/log/nginx /var/lib/nginx/body /var/lib/nginx/fastcgi \
    && chown -R www-data:www-data /var/log/nginx /var/lib/nginx \
    && chmod 755 /var/log/nginx

# Expose port 80 only (nginx handles internal routing)
EXPOSE 80

# Set environment variables for the platform
ENV N8N_HOST=0.0.0.0
ENV N8N_PORT=5678
ENV NODE_ENV=production
ENV N8N_BASIC_AUTH_ACTIVE=false
ENV N8N_SECURE_COOKIE=false
ENV WEBHOOK_URL=https://unified-minimal-platform-5p64u.ondigitalocean.app/
ENV N8N_EDITOR_BASE_URL=https://unified-minimal-platform-5p64u.ondigitalocean.app/n8n/
ENV N8N_PATH=/n8n/

# Health check
HEALTHCHECK --interval=60s --timeout=30s --start-period=240s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# Start with supervisor managing all services
CMD ["/bin/bash", "-c", "rm -f /var/run/supervisor.sock && mkdir -p /var/log/supervisor /var/run/supervisor && /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf"] 